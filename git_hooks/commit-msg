#!/bin/bash

# Get the name of the current branch
BRANCH_NAME=$(git symbolic-ref --short HEAD)

# Check if the current commit is a merge commit
if [ -e .git/MERGE_HEAD ]; then
  # It's a merge commit
  echo "Merge commit detected, skipping branch verifications."
else
  # It's not a merge commit, so check if the branch is allowed or not
  # List of disallowed branches
  DISALLOWED_BRANCHES=("main" "master" "develop")

  # Check if the branch is in the list of disallowed branches
  if [[ " ${DISALLOWED_BRANCHES[@]} " =~ " ${BRANCH_NAME} " ]]; then
    echo "Branch not allowed. The disallowed branches are: ${DISALLOWED_BRANCHES[@]}"
    exit 1
  fi

  # Add the branch name to the beginning of the commit message
  sed -i.bak -e "1s/^/$BRANCH_NAME: /" "$1"

  # Remove the backup file created by sed
  rm "$1.bak"
fi

# Allow push after processing the commit (whether modifying the message or allowing a merge)
exit 0
